{
  "Parameters": {
    "GitHubOAuthToken": {
      "Description": "Create a token with 'repo' and 'admin:repo_hook' permissions here https://github.com/settings/tokens",
      "Type": "String"
    },
    "GitHubUser":{
      "Description": "Enter GitHub username of the repository owner",
      "Type": "String"
    },
    "GitHubRepository" :{
      "Description": "Enter the repository name that should be monitored for changes",
      "Type": "String"
    },
    "GitHubBranch":{
      "Description": "Enter the repository branch name that should be monitored for changes",
      "Type": "String"
    },
    "SshKey": {
      "Description": "Amazon EC2 Key Pair",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "StackName" : {
      "Description": "Name of the stack that this stack references for networking and shared resources",
      "Default": "",
      "Type": "String"
    }
  },
  "Mappings": {
    "RegionToStackNameMap": {
      "eu-west": {
        "production": "eu1"
      },
      "ap-south-1": {
        "production": "in1"
      }
    }
  },
  "Resources": {
    "ArtifactsS3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "BucketOwnerFullControl",
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      }
    },
    "CloudFormationIamPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "*",
              "Resource": "*"
            }
          ]
        },
        "PolicyName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "AWS::StackName"
              },
              "CodepilineCloudformation",
              {
                "Ref": "AWS::Region"
              }
            ]
          ]
        },
        "Roles": [
          {
            "Ref": "CodePipelineCloudFormationRole"
          }
        ]
      }
    },
    "CodePipelineServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/"
      }
    },
    "CodePipelineCloudformationIamPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "s3:GetObject",
                "s3:GetObjectVersion",
                "s3:GetBucketVersioning"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "s3:PutObject"
              ],
              "Resource": [
                "arn:aws:s3:::codepipeline*",
                "arn:aws:s3:::elasticbeanstalk*"
              ],
              "Effect": "Allow"
            },
            {
              "Action": [
                "codecommit:CancelUploadArchive",
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:UploadArchive"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "codedeploy:CreateDeployment",
                "codedeploy:GetApplicationRevision",
                "codedeploy:GetDeployment",
                "codedeploy:GetDeploymentConfig",
                "codedeploy:RegisterApplicationRevision"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "elasticbeanstalk:*",
                "ec2:*",
                "elasticloadbalancing:*",
                "autoscaling:*",
                "cloudwatch:*",
                "s3:*",
                "sns:*",
                "cloudformation:*",
                "rds:*",
                "sqs:*",
                "ecs:*",
                "iam:PassRole"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "lambda:InvokeFunction",
                "lambda:ListFunctions"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "opsworks:CreateDeployment",
                "opsworks:DescribeApps",
                "opsworks:DescribeCommands",
                "opsworks:DescribeDeployments",
                "opsworks:DescribeInstances",
                "opsworks:DescribeStacks",
                "opsworks:UpdateApp",
                "opsworks:UpdateStack"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "cloudformation:CreateStack",
                "cloudformation:DeleteStack",
                "cloudformation:DescribeStacks",
                "cloudformation:UpdateStack",
                "cloudformation:CreateChangeSet",
                "cloudformation:DeleteChangeSet",
                "cloudformation:DescribeChangeSet",
                "cloudformation:ExecuteChangeSet",
                "cloudformation:SetStackPolicy",
                "cloudformation:ValidateTemplate",
                "iam:PassRole"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild"
              ],
              "Resource": "*",
              "Effect": "Allow"
            }
          ]
        },
        "PolicyName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "AWS::StackName"
              },
              "CodePipelineIamPolicy",
              {
                "Ref": "AWS::Region"
              }
            ]
          ]
        },
        "Roles": [
          {
            "Ref": "CodePipelineServiceRole"
          }
        ]
      }
    },
    "CodePipelineArtifactsS3BucketIamPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "AWS::StackName"
              },
              "CodePipelineArtifactsS3BucketIamPolicy",
              {
                "Ref": "AWS::Region"
              }
            ]
          ]
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ArtifactsS3Bucket",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "/",
                    [
                      {
                        "Fn::GetAtt": [
                          "ArtifactsS3Bucket",
                          "Arn"
                        ]
                      },
                      "*"
                    ]
                  ]
                },
                "*"
              ],
              "Action": [
                "s3:*"
              ]
            }
          ]
        },
        "Roles": [
          {
            "Ref": "CodePipelineServiceRole"
          }
        ]
      }
    },
    "CodePipelineCloudFormationRole" : {
      "Type":"AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudformation.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/"
      }
    },
    "CodePipelineMasterTemplate": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "AWS::StackName"
              },
              "CodePipeline",
              {
                "Ref": "AWS::Region"
              }
            ]
          ]
        },
        "RestartExecutionOnUpdate": false,
        "RoleArn": {
          "Fn::GetAtt": [
            "CodePipelineServiceRole",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Name": "Source",
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Provider": "GitHub",
                  "Version": "1"
                },
                "Name": "GitHub",
                "OutputArtifacts": [
                  {
                    "Name": "SourceArtifacts"
                  }
                ],
                "RunOrder": 1,
                "Configuration": {
                  "Owner":{
                    "Ref" : "GitHubUser"
                  },
                  "Repo": {
                    "Ref" : "GitHubRepository"
                  },
                  "Branch" : {
                    "Ref" : "GitHubBranch"
                  },
                  "OAuthToken" : {
                    "Ref" : "GitHubOAuthToken"
                  }
                }
              }
            ]
          },
          {
            "Name": "DeployInfrastructure",
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1"
                },
                "InputArtifacts": [
                  {
                    "Name": "SourceArtifacts"
                  }
                ],
                "Name": "DeployInfra",
                "RunOrder": 1,
                "Configuration": {
                  "ActionMode" : "CREATE_UPDATE",
                  "RoleArn" : {
                    "Fn::GetAtt": [
                      "CodePipelineCloudFormationRole",
                      "Arn"
                    ]
                  },
                  "Capabilities" : "CAPABILITY_NAMED_IAM",
                  "StackName" : {
                    "Ref" : "StackName"
                  },
                  "TemplateConfiguration":"SourceArtifacts::stack/clevertap_stack_parameter.json",
                  "TemplatePath": "SourceArtifacts::stack/clevertap_stack.json"

                }
              }
            ]
          }
        ],
        "ArtifactStore": {
          "Type": "S3",
          "Location": {
            "Ref": "ArtifactsS3Bucket"
          }
        }
      }
    },
    "CodePipelineLCTemplate": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "AWS::StackName"
              },
              "CodePipeline",
              "logcollector",
              {
                "Ref": "AWS::Region"
              }
            ]
          ]
        },
        "RestartExecutionOnUpdate": false,
        "RoleArn": {
          "Fn::GetAtt": [
            "CodePipelineServiceRole",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Name": "Source",
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Provider": "GitHub",
                  "Version": "1"
                },
                "Name": "GitHub",
                "OutputArtifacts": [
                  {
                    "Name": "SourceArtifacts"
                  }
                ],
                "RunOrder": 1,
                "Configuration": {
                  "Owner":{
                    "Ref" : "GitHubUser"
                  },
                  "Repo": {
                    "Ref" : "GitHubRepository"
                  },
                  "Branch" : {
                    "Ref" : "GitHubBranch"
                  },
                  "OAuthToken" : {
                    "Ref" : "GitHubOAuthToken"
                  }
                }
              }
            ]
          },
          {
            "Name": "DeployInfrastructure",
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1"
                },
                "InputArtifacts": [
                  {
                    "Name": "SourceArtifacts"
                  }
                ],
                "Name": "DeployLC",
                "RunOrder": 1,
                "Configuration": {
                  "ActionMode" : "CREATE_UPDATE",
                  "RoleArn" : {
                    "Fn::GetAtt": [
                      "CodePipelineCloudFormationRole",
                      "Arn"
                    ]
                  },
                  "Capabilities" : "CAPABILITY_NAMED_IAM",
                  "StackName" : {
                    "Fn::Join": [
                      "-",
                      [
                        {
                          "Ref": "StackName"
                        },
                        "logcollector",
                        {
                          "Ref": "AWS::Region"
                        }
                      ]
                    ]
                  },
                  "TemplateConfiguration":"SourceArtifacts::stack/logcollector_json.json",
                  "TemplatePath": "SourceArtifacts::stack/logcollector.json"

                }
              }
            ]
          }
        ],
        "ArtifactStore": {
          "Type": "S3",
          "Location": {
            "Ref": "ArtifactsS3Bucket"
          }
        }
      }
    }
  }
}
